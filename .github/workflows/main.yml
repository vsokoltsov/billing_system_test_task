name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    container: python:3.9
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:12
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: user
          POSTGRES_DB: billing_test

        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      # - name: Populate .env file
      #   run: |
      #     echo """
      #       POSTGRES_DB=billing
      #       PGDATA=/var/lib/postgresql/data/billing
      #       POSTGRES_USER=user
      #       POSTGRES_PASSWORD=password
      #       DB_HOST=postgres
      #       DB_PORT=5432
      #       PGADMIN_DEFAULT_EMAIL=pgadmin4@pgadmin.org
      #       PGADMIN_DEFAULT_PASSWORD=admin
      #       APP_ENV=development
      #     """ > .env

      # - name: Populate .env.test file
      #   run: |
      #     echo """
      #       APP_ENV=test
      #       POSTGRES_DB=billing_test
      #       PGDATA=/var/lib/postgresql/data/billing_test
      #       DB_HOST=postgres_test
      #       DB_PORT=5432
      #       POSTGRES_USER=user
      #       POSTGRES_PASSWORD=password
      #     """ > .env.test

      - name: Run tests
        env:
          DB_HOST: postgres
          DB_PORT: 5432
          POSTGRES_PASSWORD: password
          POSTGRES_USER: user
          POSTGRES_DB: billing_test

        run: |
          touch .env.test
          pip install poetry
          poetry install --no-interaction --no-ansi
          make alembic-upgrade
          make test
